#!/usr/bin/env node
'use strict';

var opts = require("nomnom")
  .option('port', {
    abbr: 'p',
    help: "port to listen, defaults to 3000"
  })
  .option('domain', {
    abbr: 'd',
    help: 'your domain, default is localhost:3000'
  })
  .option('cdnDomain', {
    help: 'domain to serve static from, defaults to domain'
  })
  .option('storage', {
    abbr: 's',
    help: 'path to save your pages and other stuff'
  })
  .option('auth', {
    flag: true,
    help: 'enable authentication (requires MongoDB)'
  })
  .option('mongo', {
    abbr: 'm',
    help: 'Mongo connection string for authentication'
  })
  .parse();

var conf = require('../conf');

// Override configuration stuff

if (opts.port) {
  conf.port = opts.port;
  conf.domain = process.env.DOMAIN || 'localhost:' + opts.port;
}

if (opts.domain) {
  conf.domain = opts.domain;
}

if (opts.cdnDomain) {
  conf.cdnDomain = opts.cdnDomain;
}

if (opts.mongo) {
  conf.mongoURI = opts.mongo;
}

conf.auth = opts['auth'];

// Run the server, like a boss

var http = require('http')
  , app = require('../app')
  , mongoose = require('mongoose');

if (conf.auth)
  mongoose.connect(conf.mongoURI, function(err) {
    if (err) {
      console.log("Could not connect to Mongo instance. Authentication will be unavailable.");
      conf.auth = false;
    }
  });

http.createServer(app).listen(conf.port, function() {
  console.log("Visit " + conf.origin + " to begin your work.");
});

require('../routes/index');